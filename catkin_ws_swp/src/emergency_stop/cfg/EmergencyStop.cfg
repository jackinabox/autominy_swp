#!/usr/bin/env python
PACKAGE = "emergency_stop"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

# precision of angle values -> 0.0175 ~ 1 degree; 0.0873 ~ 5 degree
gen.add("steering_angle_tolerance", double_t, 0, "An double parameter", 0.0175, 0, 0.0873)
# angle, that has to be considered in both directions, when driving forward
gen.add("half_angle_front_init", double_t, 0, "An integer parameter", 0.63, 0, 3.141)
# angle, that has to be considered in both directions, when driving backward
gen.add("half_angle_back_init", double_t, 0, "A double parameter", 0.33, 0, 3.141)
# distance from lidar (center) to trailing edge
gen.add("reverse_minimum_distance", double_t, 0, "A double parameter", 0.29, 0.0, 1.0)
# distance from lidar (center) to leading edge
gen.add("forward_minimum_distance", double_t, 0, "A double parameter", 0.13, 0.0, 1.0)
# points of what max. distance should be considered at all
gen.add("maximum_lookahead_distance", double_t, 0, "A double parameter", 3.0, 1.0, 6.0)
# car stops at that distance, independent of any other circumstances
gen.add("stop_distance", double_t, 0, "A double parameter", 0.05, 0.0, 2.0)
# distance to an obstacle, from which on the wanted speed gets damped linear
gen.add("max_startup_damp_range", double_t, 0, "A double parameter", 3.0, 0.0, 3.0)
# avg. deceleration of that specific car
gen.add("negative_acceleration", double_t, 0, "A double parameter", 0.5, 0.3, 1.0)
# value ...
gen.add("target_quotient", double_t, 0, "A double parameter", 1.0, 1.0, 1.5)
# distance from front to rear axle
gen.add("wheelbase", double_t, 0, "A double parameter", 0.26, 0., 0.5)
# distance of both middles of the tire widths of rear tires
gen.add("track", double_t, 0, "A double parameter", 0.165, 0.1, 0.3)
# distance from lidar (center) to rear axle
gen.add("lidar_rear_axle_distance", double_t, 0, "A double parameter", 0.2, 0.05, 0.4)
# total length of the car, including bumper etc
gen.add("car_length", double_t, 0, "A double parameter", 0.43, 0.3, 0.5)
# total width of the car
gen.add("car_width", double_t, 0, "A double parameter", 0.19, 0.15, 0.25)


exit(gen.generate(PACKAGE, "emergency_stop", "EmergencyStop"))
